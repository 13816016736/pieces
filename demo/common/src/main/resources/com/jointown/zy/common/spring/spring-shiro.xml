<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
       
    <!-- 缓存管理器 使用Ehcache实现 -->
    <!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean> -->
    
     <!-- 缓存管理器 使用redis实现 -->
     <bean id="cacheManager" class="com.jointown.zy.common.shiro.ShiroRedisCacheManager">
        <property name="redisManager" ref="redisManager"/>
        <property name="applicationPrefix" value="${jointown.shiro.cache.application.prefix}"/>
        <property name="expire" value="${jointown.shiro.cache.application.expire}"/>
     </bean> 
    
    <!-- 重复验证凭证匹配器, 子系统可覆盖定义-->
    <bean id="credentialsMatcher" class="com.jointown.zy.common.shiro.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="retryCounterCacheName" value="${jointown.shiro.credentialsmatcher.cache.name.retryCounter}"/>
    </bean>

    <bean id="defaultRealm" class="org.apache.shiro.realm.SimpleAccountRealm">
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="${jointown.shiro.realm.cache.name.authentication}"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="${jointown.shiro.realm.cache.name.authorization}"/>
        <property name="credentialsMatcher" ref="${jointown.shiro.credentialsmatcher}"/>
    </bean>
    
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="${jointown.shiro.cookie.rememberme.name}"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="${jointown.shiro.cookie.rememberme.maxage}"/><!-- 默认30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="${jointown.shiro.cookie.session.name}"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- redis 會話DAO -->
	<bean id="redisSessionDAO" class="com.jointown.zy.common.shiro.RedisSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="sessionDAO" ref="redisSessionDAO" />
	    <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="globalSessionTimeout" value="${jointown.shiro.session.timeout}"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="false"/>
	</bean>
    
    <!-- 会话验证调度器,利用redis自身的过期策略,所有不用 -->
    <!-- <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean> -->
    
    <!-- 默认subject工厂 -->
    <bean id="defaultSubjectFactory" class="org.apache.shiro.web.mgt.DefaultWebSubjectFactory" />

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="${jointown.shiro.realm}"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="subjectFactory" ref="${jointown.shiro.subject.factory}"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    <!-- <bean id="bossLoginFilter" class="com.jointown.zy.web.shiro.BossLoginFilter" /> -->
    
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="com.jointown.zy.common.shiro.JztShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${jointown.shiro.filter.url.login}"/>
        <property name="successUrl" value="${jointown.shiro.filter.url.success}"/>
        <property name="unauthorizedUrl" value="${jointown.shiro.filter.url.unauthorized}"/>
        <property name="filtersString" value="${jointown.shiro.filter.filters}" />  
    	<property name="filterChainDefinitionsString" value="${jointown.shiro.filter.definitions}" />
    	<!-- <property name="filterChainDefinitions">  
	        <value>
	        /vcode = anon
	        /html/resources/** = anon
	        /casFailure.jsp = anon
	        /** = user
	        /user = roles[user]
	        /user/add = roles[admin]  
	        </value>  
	    </property> -->  
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 缓存管理器 使用redis实现 -->
     <bean id="cacheManager" class="com.pieces.service.shiro.ShiroRedisCacheManager">
        <property name="redisManager" ref="redisManager"/>
        <property name="applicationPrefix" value="${pieces.shiro.cacheManager.applicationPrefix}"/>
        <property name="expire" value="${pieces.shiro.cacheManager.expire}"/>
     </bean> 
    
    <!-- 重复验证凭证匹配器, 子系统可覆盖定义-->
    <bean id="credentialsMatcher" class="com.pieces.service.shiro.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="retryCounterCacheName" value="${pieces.shiro.credentialsMatcher.retryCounterCacheName}"/>
    </bean>

    <bean id="defaultRealm" class="org.apache.shiro.realm.SimpleAccountRealm">
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="${pieces.shiro.defaultRealm.authenticationCacheName}"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="${pieces.shiro.defaultRealm.authorizationCacheName}"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="${pieces.shiro.rememberMeCookie.maxAge}"/><!-- 默认30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="${pieces.shiro.sessionIdCookie.maxAge}"/>
    </bean>

    <!-- redis 會話DAO -->
	<bean id="redisSessionDAO" class="com.pieces.service.shiro.RedisSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="sessionDAO" ref="redisSessionDAO" />
	    <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="globalSessionTimeout" value="${pieces.shiro.sessionManager.globalSessionTimeout}"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="false"/>
	</bean>
    
    <!-- 默认subject工厂 -->
    <bean id="defaultSubjectFactory" class="org.apache.shiro.web.mgt.DefaultWebSubjectFactory" />

     <!--安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="defaultRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="subjectFactory" ref="defaultSubjectFactory"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="com.pieces.service.filter.PiecesShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${pieces.shiro.shiroFilter.loginUrl}"/>
        <property name="successUrl" value="${pieces.shiro.shiroFilter.successUrl}"/>
        <property name="unauthorizedUrl" value="${pieces.shiro.shiroFilter.unauthorizedUrl}"/>
        <property name="filtersString" value="${pieces.shiro.shiroFilter.filtersString}" />  
    	<property name="filterChainDefinitionsString" value="${pieces.shiro.shiroFilter.filterChainDefinitionsString}" /> 
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>
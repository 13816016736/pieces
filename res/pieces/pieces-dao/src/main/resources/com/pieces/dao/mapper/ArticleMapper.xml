<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pieces.dao.ArticleDao">
    <resultMap id="ArticleResultMap" type="com.pieces.dao.model.Article">
            <id column="id"  property="id" />
            <result column="title"  property="title" />
            <result column="category_id"  property="categoryId" />
            <result column="status"  property="status" />
            <result column="content"  property="content" />
            <result column="create_user"  property="createUser" />
            <result column="create_time"  property="createTime" />
            <result column="update_user"  property="updateUser" />
            <result column="update_time"  property="updateTime" />
            <result column="published_date"  property="publishedDate" />
            <result column="sort"  property="sort" />
            <result column="model"  property="model" />
            <result column="is_top"  property="isTop" />
    </resultMap>
    
    <resultMap id="ArticleVoResultMap" type="com.pieces.dao.vo.ArticleVo" extends="ArticleResultMap">
        <result column="articleCategoryName"  property="articleCategoryName" />
    </resultMap>

    <sql id="Base_Column_List">
        id,title,published_date,category_id,status,content,create_user,create_time,update_user,update_time,sort,model,is_top
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="ArticleResultMap">
        select
        <include refid="Base_Column_List" />
        from article
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="ArticleResultMap">
        select
        <include refid="Base_Column_List" />
        from article
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from article
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.pieces.dao.model.Article">
        insert into
        article (title,category_id,status,content,create_user,create_time,update_user,update_time,sort,model,is_top,published_date)
        values
        (#{title},#{categoryId},#{status},#{content},#{createUser},#{createTime},#{updateUser},#{updateTime},#{sort},#{model},#{isTop},#{publishedDate})
    </insert>

    <update id="update" parameterType="com.pieces.dao.model.Article">
        update article
        <set>
                                                        
            <if test="title != null">
                title = #{title},
            </if>
                                            
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
                                            
            <if test="status != null">
                status = #{status},
            </if>
                                            
            <if test="content != null">
                content = #{content},
            </if>
                                            
            <if test="createUser != null">
                create_user = #{createUser},
            </if>
                                            
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
                                            
            <if test="updateUser != null">
                update_user = #{updateUser},
            </if>
                                            
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
                                            
            <if test="sort != null">
                sort = #{sort},
            </if>
                                            
            <if test="model != null">
                model = #{model},
            </if>

            <if test="isTop != null">
                is_top = #{isTop},
            </if>

            <if test="publishedDate != null">
                published_date = #{publishedDate},
            </if>

                            
        </set>
        where id = #{id}
    </update>

    <!-- 根据参数查询文章信息 -->
    <select id="findByParam" parameterType="com.pieces.dao.vo.ArticleVo" resultMap="ArticleVoResultMap">
        select
        a.id as id,a.title as title,a.category_id as category_id,
        a.status as status,
        a.create_user as create_user,a.create_time as create_time,
        a.update_user as update_user,a.update_time as update_time,published_date,
        a.sort as sort, a.model as model,a.is_top as is_top,c.name as articleCategoryName
        from article a
        left join article_category c on a.category_id = c.id
        <where>
            <if test="title != null">
                a.title like "%"#{title}"%"
            </if>

            <if test="categoryId != null">
                and a.category_id = #{categoryId}
            </if>

            <if test="status != null">
                and a.status = #{status}
            </if>

            <if test="createUser != null">
                and a.create_user = #{createUser}
            </if>

            <if test="createTime != null">
                and a.create_time = #{createTime}
            </if>

            <if test="updateUser != null">
                and a.update_user = #{updateUser}
            </if>

            <if test="updateTime != null">
                and a.update_time = #{updateTime}
            </if>

            <if test="sort != null">
                and a.sort = #{sort}
            </if>

            <if test="model != null">
                and a.model = #{model}
            </if>

            <if test="articleCategoryName != null">
                and c.name like "%"#{articleCategoryName}"%"
            </if>
            <if test="publishedDate != null">
                and DATE_FORMAT(published_date,  '%Y-%m-%d') =  DATE_FORMAT(#{publishedDate},  '%Y-%m-%d')
            </if>
        </where>
        order by a.is_top desc, a.published_date desc
    </select>


    <select id="findByModel" parameterType="java.lang.Integer" resultMap="ArticleVoResultMap">
        select
        <include refid="Base_Column_List" />
        from article
        where model = #{model} and status = 1 order by is_top desc, published_date desc
    </select>
</mapper>
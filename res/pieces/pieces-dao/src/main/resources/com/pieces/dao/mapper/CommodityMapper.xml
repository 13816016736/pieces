<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pieces.dao.CommodityDao">

    <resultMap id="CommodityResultMap" type="com.pieces.dao.model.Commodity">
        <id column="id"  property="id" />
        <result column="category_id"  property="categoryId" />
        <result column="name"  property="name" />
        <result column="title"  property="title" />
        <result column="level"  property="level" />
        <result column="spec"  property="spec" />
        <result column="origin_of"  property="originOf" />
        <result column="executive_standard"  property="executiveStandard" />
        <result column="exterior"  property="exterior" />
        <result column="attribute"  property="attribute" />
        <result column="details"  property="details" />
        <result column="picture_url"  property="pictureUrl" />
        <result column="status"  property="status" />
        <result column="create_time"  property="createTime" />
        <result column="sort" property="sort"/>
    </resultMap>

    <resultMap id="CommodityVOResultMap" type="com.pieces.dao.vo.CommodityVo">
        <id column="id"  property="id" />
        <result column="category_id"  property="categoryId" />
        <result column="name"  property="name" />
        <result column="title"  property="title" />
        <result column="level"  property="level" />
        <result column="spec"  property="spec" />
        <result column="origin_of"  property="originOf" />
        <result column="executive_standard"  property="executiveStandard" />
        <result column="exterior"  property="exterior" />
        <result column="attribute"  property="attribute" />
        <result column="details"  property="details" />
        <result column="picture_url"  property="pictureUrl" />
        <result column="status"  property="status" />
        <result column="categoryName" property="categoryName" />
        <result column="eqName" property="eqName" />
        <result column="create_time"  property="createTime" />
        <result column="sort" property="sort"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,category_id,name,title,level,spec,origin_of,executive_standard,exterior,attribute,details,picture_url,status,create_time,sort
    </sql>

    <sql id="Base_Column_List_B">
        coom.id as id,category_id,name,title,level,spec,origin_of,executive_standard,exterior,attribute,details,picture_url,status,create_time, coom.sort as sort
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="CommodityResultMap">
        select
        <include refid="Base_Column_List" />
        from commodity
        where id = #{id}
    </select>

    <select id="findByIds" parameterType="java.lang.String" resultMap="CommodityVOResultMap">
        select  *,
        category.name as categoryName
        from commodity
        left join category on category_id = category.id
        where id in (${ids})
    </select>

    <select id="findAll"  resultMap="CommodityResultMap">
        select
        <include refid="Base_Column_List" />
        from commodity
    </select>

    <select id="findByParam" parameterType="com.pieces.dao.vo.CommodityVo" resultMap="CommodityVOResultMap">
        select
        coom.*,
        category.name as categoryName
        from commodity coom
        left join category on category_id = category.id
        <where>
            <if test="id != null">
                coom.id = #{id}
            </if>

            <if test="name != null">
               and coom.name like "%"#{name}"%"
            </if>
            
            <if test="eqName != null">
               and coom.name = #{eqName}
            </if>

            <if test="spec != null">
               and spec like "%"#{spec}"%"
            </if>

            <if test="originOf != null">
               and origin_of like "%"#{originOf}"%"
            </if>
            <if test="executiveStandard != null">
               and executive_standard like "%"#{executiveStandard}"%"
            </if>

            <if test="exterior != null">
               and exterior = #{exterior}
            </if>

            <if test="pictureUrl != null">
               and picture_url = #{pictureUrl}
            </if>

            <if test="details != null">
               and details = #{details}
            </if>

            <if test="status != null">
               and coom.status = #{status}
            </if>

            <if test="categoryId != null">
               and category_id = #{categoryId}
            </if>

            <if test="categoryIds != null">
                and category_id in (${categoryIds})
            </if>

            <if test="createTime != null">
               and create_time = #{createTime}
            </if>
            <if test="categoryName != null">
                and category.name like "%"#{categoryName}"%"
            </if>
            <if test="level != null">
                and coom.level like "%"#{level}"%"
            </if>


        </where>
        order by
        <if test="sort != null">coom.sort DESC,</if>
        coom.id DESC
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from commodity
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.pieces.dao.model.Commodity">
        insert into
        commodity (category_id,name,title,level,spec,origin_of,executive_standard,exterior,attribute,details,picture_url,status,create_time)
        values
        (#{categoryId},#{name},#{title},#{level},#{spec},#{originOf},#{executiveStandard},#{exterior},#{attribute},#{details},#{pictureUrl},#{status},#{createTime})
    </insert>

    <update id="update" parameterType="com.pieces.dao.model.Commodity">
        update commodity
        <set>

            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>

            <if test="name != null">
                name = #{name},
            </if>

            <if test="title != null">
                title = #{title},
            </if>

            <if test="level != null">
                level = #{level},
            </if>

            <if test="spec != null">
                spec = #{spec},
            </if>

            <if test="originOf != null">
                origin_of = #{originOf},
            </if>

            <if test="executiveStandard != null">
                executive_standard = #{executiveStandard},
            </if>

            <if test="exterior != null">
                exterior = #{exterior},
            </if>

            <if test="attribute != null">
                attribute = #{attribute},
            </if>

            <if test="details != null">
                details = #{details},
            </if>

            <if test="pictureUrl != null">
                picture_url = #{pictureUrl},
            </if>

            <if test="status != null">
                status = #{status},
            </if>

            <if test="createTime != null">
                create_time = #{createTime},
            </if>

        </set>
        where id = #{id}
    </update>

    <!-- 批量更新报价信息 -->
    <update id="batchUpdate" parameterType="java.util.List">
        <if test="list != null">
            <foreach collection="list" item="item" index="index" open="" close="" separator=";">
                update commodity
                <set>
                    <if test="item.sort != null">
                        sort = #{item.sort},
                    </if>
                </set>
                where id = #{item.id}
            </foreach>
        </if>
    </update>

    <select id="findVoByPage" resultMap="CommodityVOResultMap" >
        select  *,
        category.name as categoryName
        from commodity
        left join category on category_id = category.id
        WHERE commodity.status = 1
    </select>

    <select id="findVoById" parameterType="java.lang.Integer" resultMap="CommodityVOResultMap" >
        select  *,
        category.name as categoryName
        from commodity
        left join category on category_id = category.id
        where commodity.id = #{id}
    </select>


    <select id="findVoByIds" parameterType="java.util.List" resultMap="CommodityVOResultMap" >
        select  *,
        category.name as categoryName
        from commodity
        left join category on category_id = category.id
        where commodity.id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>

    </select>


    <select id="findCommodityByBreedId" parameterType="java.lang.Integer" resultType="com.pieces.dao.vo.CommodityVo">
        select *
	        from commodity a
	        where a.status = 1
	        and a.category_id = #{categoryId}
    </select>
    
    <select id="findStandardByBreedId" parameterType="com.pieces.dao.vo.CommodityVo" resultType="com.pieces.dao.vo.CommodityVo">
        select distinct a.executive_standard as executiveStandard
	        from commodity a
	        where a.status = 1
	        <if test="breedIds != null and breedIds != ''">
	        	and a.category_id in (${breedIds})
	        </if>
    </select>
    


    <select id="findCommodityByName" parameterType="com.pieces.dao.vo.CommodityVo" resultMap="CommodityVOResultMap">
        select 
        <include refid="Base_Column_List" />
	        from commodity a
	        where a.status = 1
	        <if test="eqName != null">
	        	and a.name = <![CDATA[#{eqName}]]>
	        </if>
    </select>
    
    <select id="findCommodityByNameLx" parameterType="com.pieces.dao.vo.CommodityVo" resultMap="CommodityVOResultMap">
        select 
        	distinct a.name
	        from commodity a
	        where a.status = 1
	        <if test="name != null">
	        	and a.name like "%"#{name}"%"
	        </if>
    </select>

    <select id="findByName" parameterType="java.lang.String" resultMap="CommodityResultMap">
        SELECT <include refid="Base_Column_List" />
        from commodity
        where name = #{name} and status = 1
    </select>

    <select id="findDistinctName" parameterType="com.pieces.dao.vo.CommodityVo" resultType="com.pieces.dao.vo.CommodityVo">
        select distinct a.name
        from commodity a
        where a.status = 1
        <if test="breedId != null and breedId != ''">
            and a.category_id = #{breedId}
        </if>
        ORDER BY  a.sort DESC
    </select>

</mapper>
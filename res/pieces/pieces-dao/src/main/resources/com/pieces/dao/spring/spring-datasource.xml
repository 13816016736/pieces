<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
					 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					 http://www.springframework.org/schema/context
					 http://www.springframework.org/schema/context/spring-context-3.0.xsd
					 http://www.springframework.org/schema/aop
					 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
					 http://www.springframework.org/schema/tx 
					 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<!--启用阿里连接池  -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
	    <property name="url" value="${db.jdbcUrl}" />  
	    <property name="username" value="${db.user}" />  
	    <property name="password" value="${db.password}" />
	        
	    <property name="initialSize" value="20" />
	    <property name="minIdle" value="10" />
	    <property name="maxActive" value="50" />
	   
	    <property name="maxWait" value="60000" />  
	   
	    <property name="timeBetweenEvictionRunsMillis" value="6000" />  
	    <property name="minEvictableIdleTimeMillis" value="3000000" />  
	    <property name="validationQuery" value="SELECT 'x'" />  
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="false" />  
	    <property name="testOnReturn" value="false" />  
	   
	    <property name="poolPreparedStatements" value="true" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
	    <property name="filters" value="stat" />   
	</bean>  

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:com/pieces/dao/mapper/*.xml" />
		<property name="typeAliasesPackage" value="com.pieces.dao.model"/>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=true
							rowBoundsWithCount=true
							offsetAsPageNum=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
      <property name="transactionManager">
        <ref bean="transactionManager"/>
      </property>
    </bean>
    

	<!-- 启用 annotation事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="com.pieces.dao" />
		<property name="annotationClass" value="com.pieces.dao.annotation.AutoMapper" />
	</bean>

</beans>
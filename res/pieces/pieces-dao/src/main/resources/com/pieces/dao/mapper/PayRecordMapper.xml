<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pieces.dao.PayRecordDao">
    <resultMap id="PayRecordResultMap" type="com.pieces.dao.model.PayRecord">
            <id column="id"  property="id" />
            <result column="pay_code"  property="payCode" />
            <result column="order_code"  property="orderCode" />
            <result column="order_id"  property="orderId" />
            <result column="account_bill_id"  property="accountBillId" />
            <result column="amounts_payable"  property="amountsPayable" />
            <result column="actual_payment"  property="actualPayment" />
           <result column="deposit"  property="deposit" />
            <result column="pay_bank"  property="payBank" />
            <result column="pay_account"  property="payAccount" />
            <result column="pay_bank_card"  property="payBankCard" />
            <result column="receive_bank"  property="receiveBank" />
            <result column="receive_account"  property="receiveAccount" />
            <result column="receive_bank_card"  property="receiveBankCard" />
            <result column="user_id"  property="userId" />
            <result column="agent_id"  property="agentId" />
            <result column="payment_time"  property="paymentTime" />
            <result column="status"  property="status" />
            <result column="fail_reason"  property="failReason" />
            <result column="member_id"  property="memberId" />
            <result column="operation_time"  property="operationTime" />
            <result column="create_time"  property="createTime" />
        
    </resultMap>

    <resultMap id="PayRecordResultMapVo" type="com.pieces.dao.vo.PayRecordVo" extends="PayRecordResultMap">
        <result column="userName" property="orderUserName"/>
        <result column="companyFullName" property="companyFullName"/>
        <result column="memberName" property="memberName"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,pay_code,order_code,order_id,account_bill_id,amounts_payable,actual_payment,deposit,pay_bank,pay_account,pay_bank_card,receive_bank,receive_account,receive_bank_card,user_id,agent_id,payment_time,status,fail_reason,member_id,operation_time,create_time
    </sql>
    <sql id="Base_Column_List_AS">
        pr.id as id,pr.pay_code as pay_code, pr.order_code as order_code,pr.order_id as order_id,
        pr.amounts_payable as amounts_payable, pr.actual_payment as actual_payment,pr.deposit as deposit,
         pr.pay_bank as pay_bank,
        pr.pay_account as pay_account, pr.pay_bank_card as pay_bank_card, pr.receive_bank as receive_bank,
        pr.receive_account as receive_account, pr.receive_bank_card as receive_bank_card,
        pr.user_id as user_id,pr.agent_id as agent_id, pr.payment_time as payment_time, pr.status as status,
        pr.fail_reason as fail_reason, pr.member_id as member_id, pr.operation_time as operation_time, pr.create_time as create_time
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="PayRecordResultMap">
        select
        <include refid="Base_Column_List" />
        from pay_record
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="PayRecordResultMap">
        select
        <include refid="Base_Column_List" />
        from pay_record
    </select>

    <select id="findByParams" resultMap="PayRecordResultMapVo" parameterType="com.pieces.dao.vo.PayRecordVo">
        select
        <include refid="Base_Column_List_AS" />,
        u.company_full_name as companyFullName, u.user_name as userName,
        m.name as memberName
        from pay_record pr
        LEFT join user u ON pr.user_id = u.id
        LEFT join member m ON pr.member_id = m.id
        <where>
            <if test="id != null">
                pr.id = #{id}
            </if>
            <if test="orderUserName != null">
               and  u.user_name like "%"#{orderUserName}"%"
            </if>
            <if test="companyFullName != null">
               and   u.company_full_name like "%"#{companyFullName}"%"
            </if>
            <if test="accountBillId != null">
               and  pr.account_bill_id = #{accountBillId}
            </if>
            <if test="payCode != null">
               and  pr.pay_code like "%"#{payCode}"%"
            </if>
            <if test="orderCode != null">
               and  pr.order_code like "%"#{orderCode}"%"
            </if>
            <if test="status != null">
               and  pr.status = #{status}
            </if>
        </where>
        ORDER BY pr.create_time DESC
    </select>


    <select id="findByNormalRecord"    resultMap="PayRecordResultMapVo" parameterType="com.pieces.dao.vo.PayRecordVo">
        select
        <include refid="Base_Column_List" />
        from pay_record pr
        <where>
            (pr.status = 1 or  pr.status = 2)
           <if test="userId != null">
           and  pr.user_id = #{userId}
           </if>
            <if test="agentId != null">
                and  pr.agent_id = #{agentId}
            </if>
        </where>
        ORDER BY pr.create_time DESC
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from pay_record
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.pieces.dao.model.PayRecord">
        insert into
        pay_record (pay_code,order_code,order_id,account_bill_id,amounts_payable,actual_payment,deposit,pay_bank,pay_account,pay_bank_card,receive_bank,receive_account,receive_bank_card,user_id,agent_id,payment_time,status,fail_reason,member_id,operation_time,create_time)
        values
        (#{payCode},#{orderCode},#{orderId},#{accountBillId},#{amountsPayable},#{actualPayment},#{deposit},#{payBank},#{payAccount},#{payBankCard},#{receiveBank},#{receiveAccount},#{receiveBankCard},#{userId},#{agentId},#{paymentTime},#{status},#{failReason},#{memberId},#{operationTime},#{createTime})
    </insert>

    <update id="update" parameterType="com.pieces.dao.model.PayRecord">
        update pay_record
        <set>
                                                        
            <if test="payCode != null">
                pay_code = #{payCode},
            </if>
                                            
            <if test="orderCode != null">
                order_code = #{orderCode},
            </if>
                                            
            <if test="orderId != null">
                order_id = #{orderId},
            </if>

            <if test="accountBillId != null">
                account_bill_id = #{accountBillId},
            </if>

            <if test="amountsPayable != null">
                amounts_payable = #{amountsPayable},
            </if>
                                            
            <if test="deposit != null">
                deposit = #{deposit},
            </if>

            <if test="actualPayment != null">
                actual_payment = #{actualPayment},
            </if>
                                            
            <if test="payBank != null">
                pay_bank = #{payBank},
            </if>
                                            
            <if test="payAccount != null">
                pay_account = #{payAccount},
            </if>
                                            
            <if test="payBankCard != null">
                pay_bank_card = #{payBankCard},
            </if>
                                            
            <if test="receiveBank != null">
                receive_bank = #{receiveBank},
            </if>
                                            
            <if test="receiveAccount != null">
                receive_account = #{receiveAccount},
            </if>
                                            
            <if test="receiveBankCard != null">
                receive_bank_card = #{receiveBankCard},
            </if>
                                            
            <if test="userId != null">
                user_id = #{userId},
            </if>
                                            
            <if test="paymentTime != null">
                payment_time = #{paymentTime},
            </if>
                                            
            <if test="status != null">
                status = #{status},
            </if>
                                            
            <if test="failReason != null">
                fail_reason = #{failReason},
            </if>
                                            
            <if test="memberId != null">
                member_id = #{memberId},
            </if>
                                            
            <if test="operationTime != null">
                operation_time = #{operationTime},
            </if>
                                            
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
                            
        </set>
        where id = #{id}
    </update>

    <select id="findByUserId"    resultMap="PayRecordResultMapVo" parameterType="com.pieces.dao.vo.PayRecordVo">
        select
        <include refid="Base_Column_List" />
        from pay_record pr
        <where>
            (pr.status = 1 or  pr.status = 2)
                and  pr.user_id = #{userId} and pr.agent_id=NULL

        </where>
        ORDER BY pr.create_time DESC
    </select>

    <select id="getNotHandleCount"  resultType="java.lang.Integer">
        select count(id)
        from pay_record WHERE status=0
    </select>


</mapper>
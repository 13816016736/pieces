<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pieces.dao.PayRecordDao">
    <resultMap id="PayRecordResultMap" type="com.pieces.dao.model.PayRecord">
            <id column="id"  property="id" />
            <result column="pay_code"  property="payCode" />
            <result column="order_code"  property="orderCode" />
            <result column="order_id"  property="orderId" />
            <result column="amounts_payable"  property="amountsPayable" />
            <result column="actual_payment"  property="actualPayment" />
            <result column="open_bank"  property="openBank" />
            <result column="open_account"  property="openAccount" />
            <result column="open_bank_card"  property="openBankCard" />
            <result column="receive_bank"  property="receiveBank" />
            <result column="receive_account"  property="receiveAccount" />
            <result column="receive_bank_card"  property="receiveBankCard" />
            <result column="user_id"  property="userId" />
            <result column="payment_time"  property="paymentTime" />
            <result column="status"  property="status" />
            <result column="create_time"  property="createTime" />
        
    </resultMap>

    <resultMap id="PayRecordResultMapVo" type="com.pieces.dao.vo.PayRecordVo">
            <id column="id"  property="id" />
            <result column="pay_code"  property="payCode" />
            <result column="order_code"  property="orderCode" />
            <result column="order_id"  property="orderId" />
            <result column="amounts_payable"  property="amountsPayable" />
            <result column="actual_payment"  property="actualPayment" />
            <result column="open_bank"  property="openBank" />
            <result column="open_account"  property="openAccount" />
            <result column="open_bank_card"  property="openBankCard" />
            <result column="receive_bank"  property="receiveBank" />
            <result column="receive_account"  property="receiveAccount" />
            <result column="receive_bank_card"  property="receiveBankCard" />
            <result column="user_id"  property="userId" />
            <result column="payment_time"  property="paymentTime" />
            <result column="status"  property="status" />
            <result column="create_time"  property="createTime" />
        
    </resultMap>

    <sql id="Base_Column_List">
        id,pay_code,order_code,order_id,amounts_payable,actual_payment,open_bank,open_account,open_bank_card,receive_bank,receive_account,receive_bank_card,user_id,payment_time,status,create_time
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="PayRecordResultMap">
        select
        <include refid="Base_Column_List" />
        from pay_record
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="PayRecordResultMap">
        select
        <include refid="Base_Column_List" />
        from pay_record
    </select>

    <select id="findByParams" resultMap="PayRecordResultMapVo" parameterType="com.pieces.dao.vo.PayRecordVo">
        select
        <include refid="Base_Column_List" />
        from pay_record
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from pay_record
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.pieces.dao.model.PayRecord">
        insert into
        pay_record (pay_code,order_code,order_id,amounts_payable,actual_payment,open_bank,open_account,open_bank_card,receive_bank,receive_account,receive_bank_card,user_id,payment_time,status,create_time)
        values
        (#{payCode},#{orderCode},#{orderId},#{amountsPayable},#{actualPayment},#{openBank},#{openAccount},#{openBankCard},#{receiveBank},#{receiveAccount},#{receiveBankCard},#{userId},#{paymentTime},#{status},#{createTime})
    </insert>

    <update id="update" parameterType="com.pieces.dao.model.PayRecord">
        update pay_record
        <set>
                                                        
            <if test="payCode != null">
                pay_code = #{payCode},
            </if>
                                            
            <if test="orderCode != null">
                order_code = #{orderCode},
            </if>
                                            
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
                                            
            <if test="amountsPayable != null">
                amounts_payable = #{amountsPayable},
            </if>
                                            
            <if test="actualPayment != null">
                actual_payment = #{actualPayment},
            </if>
                                            
            <if test="openBank != null">
                open_bank = #{openBank},
            </if>
                                            
            <if test="openAccount != null">
                open_account = #{openAccount},
            </if>
                                            
            <if test="openBankCard != null">
                open_bank_card = #{openBankCard},
            </if>
                                            
            <if test="receiveBank != null">
                receive_bank = #{receiveBank},
            </if>
                                            
            <if test="receiveAccount != null">
                receive_account = #{receiveAccount},
            </if>
                                            
            <if test="receiveBankCard != null">
                receive_bank_card = #{receiveBankCard},
            </if>
                                            
            <if test="userId != null">
                user_id = #{userId},
            </if>
                                            
            <if test="paymentTime != null">
                payment_time = #{paymentTime},
            </if>
                                            
            <if test="status != null">
                status = #{status},
            </if>
                                            
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
                            
        </set>
        where id = #{id}
    </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pieces.dao.CategoryMapper">
    <resultMap id="CategoryResultMap" type="com.pieces.dao.model.Category">
            <id column="id"  property="id" />
            <result column="name"  property="name" />
            <result column="partenId"  property="partenId" />
            <result column="aliases"  property="aliases" />
            <result column="status"  property="status" />
            <result column="level"  property="level" />
            <result column="specs"  property="specs" />
            <result column="origins"  property="origins" />
            <result column="levels"  property="levels" />
            <result column="create_time"  property="createTime" />
        
    </resultMap>

    <sql id="Base_Column_List">
        id,name,partenId,aliases,status,level,specs,origins,levels,create_time
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="CategoryResultMap">
        select
        <include refid="Base_Column_List" />
        from category
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="CategoryResultMap">
        select
        <include refid="Base_Column_List" />
        from category
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from category
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.pieces.dao.model.Category">
        insert into
        category (name,partenId,aliases,status,level,specs,origins,levels,create_time)
        values
        (#{name},#{partenId},#{aliases},#{status},#{level},#{specs},#{origins},#{levels},#{createTime})
    </insert>

    <update id="update" parameterType="com.pieces.dao.model.Category">
        update category
        <set>
                                                        
            <if test="name != null">
                name = #{name},
            </if>
                                            
            <if test="partenId != null">
                partenId = #{partenId},
            </if>
                                            
            <if test="aliases != null">
                aliases = #{aliases},
            </if>
                                            
            <if test="status != null">
                status = #{status},
            </if>
                                            
            <if test="level != null">
                level = #{level},
            </if>
                                            
            <if test="specs != null">
                specs = #{specs},
            </if>
                                            
            <if test="origins != null">
                origins = #{origins},
            </if>
                                            
            <if test="levels != null">
                levels = #{levels},
            </if>
                                            
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
                            
        </set>
        where id = #{id}
    </update>
    
    <select id="findClassify" parameterType="com.pieces.dao.vo.CategoryVo" resultMap="CategoryResultMap">
        select
        <include refid="Base_Column_List" />
        from category
        where 1=1
        and level = 1
        <if test="name != null">
            and name like CONCAT('%','${name}','%' )
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        order by create_time desc
    </select>
    
    <select id="findBreed" parameterType="com.pieces.dao.vo.CategoryVo" resultType="com.pieces.dao.vo.CategoryVo">
        select a.*,b.name as classifyName
	        from category a
	        inner join category b on a.partenId = b.id 
	        <if test="classifyName != null">
            	and b.name like CONCAT('%','${classifyName}','%' )
        	</if>
	        where a.level = 2
	        <if test="name != null">
            	and a.name like CONCAT('%','${name}','%' )
        	</if>
        	<if test="aliases != null">
            	and a.aliases like CONCAT('%','${aliases}','%' )
        	</if>
        	<if test="status != null">
            	and a.status = #{status}
        	</if>
        	order by a.create_time desc
    </select>
    
    <select id="findBreedByPartenId" parameterType="java.lang.Integer" resultType="com.pieces.dao.vo.CategoryVo">
        select *
	        from category a
	        where a.level = 2
	        and a.partenId = #{partenId}
	        and a.status = 1
    </select>
</mapper>